// Code generated by protoc-gen-go. DO NOT EDIT.
// source: golangBowlingAPI.proto

/*
Package golangBowlingAPI is a generated protocol buffer package.

It is generated from these files:
	golangBowlingAPI.proto

It has these top-level messages:
	Throw
	Score
	PlayerScoreStack
*/
package golangBowlingAPI

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Throw struct {
	Pins int32 `protobuf:"varint,1,opt,name=pins" json:"pins,omitempty"`
}

func (m *Throw) Reset()                    { *m = Throw{} }
func (m *Throw) String() string            { return proto.CompactTextString(m) }
func (*Throw) ProtoMessage()               {}
func (*Throw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Throw) GetPins() int32 {
	if m != nil {
		return m.Pins
	}
	return 0
}

type Score struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *Score) Reset()                    { *m = Score{} }
func (m *Score) String() string            { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()               {}
func (*Score) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Score) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PlayerScoreStack struct {
	History string `protobuf:"bytes,1,opt,name=history" json:"history,omitempty"`
	Score   int32  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
}

func (m *PlayerScoreStack) Reset()                    { *m = PlayerScoreStack{} }
func (m *PlayerScoreStack) String() string            { return proto.CompactTextString(m) }
func (*PlayerScoreStack) ProtoMessage()               {}
func (*PlayerScoreStack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PlayerScoreStack) GetHistory() string {
	if m != nil {
		return m.History
	}
	return ""
}

func (m *PlayerScoreStack) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func init() {
	proto.RegisterType((*Throw)(nil), "golangBowlingAPI.Throw")
	proto.RegisterType((*Score)(nil), "golangBowlingAPI.Score")
	proto.RegisterType((*PlayerScoreStack)(nil), "golangBowlingAPI.PlayerScoreStack")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BowlingService service

type BowlingServiceClient interface {
	Bowl(ctx context.Context, in *Throw, opts ...grpc.CallOption) (*Score, error)
}

type bowlingServiceClient struct {
	cc *grpc.ClientConn
}

func NewBowlingServiceClient(cc *grpc.ClientConn) BowlingServiceClient {
	return &bowlingServiceClient{cc}
}

func (c *bowlingServiceClient) Bowl(ctx context.Context, in *Throw, opts ...grpc.CallOption) (*Score, error) {
	out := new(Score)
	err := grpc.Invoke(ctx, "/golangBowlingAPI.BowlingService/Bowl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BowlingService service

type BowlingServiceServer interface {
	Bowl(context.Context, *Throw) (*Score, error)
}

func RegisterBowlingServiceServer(s *grpc.Server, srv BowlingServiceServer) {
	s.RegisterService(&_BowlingService_serviceDesc, srv)
}

func _BowlingService_Bowl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Throw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BowlingServiceServer).Bowl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/golangBowlingAPI.BowlingService/Bowl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BowlingServiceServer).Bowl(ctx, req.(*Throw))
	}
	return interceptor(ctx, in, info, handler)
}

var _BowlingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "golangBowlingAPI.BowlingService",
	HandlerType: (*BowlingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Bowl",
			Handler:    _BowlingService_Bowl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golangBowlingAPI.proto",
}

func init() { proto.RegisterFile("golangBowlingAPI.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0xcf, 0xcf, 0x49,
	0xcc, 0x4b, 0x77, 0xca, 0x2f, 0xcf, 0xc9, 0xcc, 0x4b, 0x77, 0x0c, 0xf0, 0xd4, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x40, 0x17, 0x57, 0x92, 0xe6, 0x62, 0x0d, 0xc9, 0x28, 0xca, 0x2f, 0x17,
	0x12, 0xe2, 0x62, 0x29, 0xc8, 0xcc, 0x2b, 0x96, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3,
	0x95, 0xe4, 0xb9, 0x58, 0x83, 0x93, 0xf3, 0x8b, 0x52, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0x52, 0x8b,
	0x4b, 0x73, 0x4a, 0xa0, 0xd2, 0x50, 0x9e, 0x92, 0x13, 0x97, 0x40, 0x40, 0x4e, 0x62, 0x65, 0x6a,
	0x11, 0x58, 0x59, 0x70, 0x49, 0x62, 0x72, 0xb6, 0x90, 0x04, 0x17, 0x7b, 0x46, 0x66, 0x71, 0x49,
	0x7e, 0x51, 0x25, 0x58, 0x31, 0x67, 0x10, 0x8c, 0x2b, 0x24, 0xc2, 0xc5, 0x5a, 0x0c, 0x52, 0x27,
	0xc1, 0x04, 0x36, 0x04, 0xc2, 0x31, 0xf2, 0xe1, 0xe2, 0x83, 0xba, 0x27, 0x38, 0xb5, 0xa8, 0x2c,
	0x33, 0x39, 0x55, 0xc8, 0x8a, 0x8b, 0x05, 0x24, 0x22, 0x24, 0xae, 0x87, 0xe1, 0x0d, 0xb0, 0x5b,
	0xa5, 0xb0, 0x48, 0x80, 0x1d, 0xa0, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0xa8, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x59, 0xea, 0xb6, 0xb3, 0x02, 0x01, 0x00, 0x00,
}
